unit uServer;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, System.Win.ScktComp;

type
  TfrmServer = class(TForm)
    ServerSocket: TServerSocket;
    mmLog: TMemo;
    mmData: TMemo;
    procedure ServerSocketClientRead(Sender: TObject; Socket: TCustomWinSocket);
    procedure ServerSocketClientConnect(Sender: TObject;
      Socket: TCustomWinSocket);
  private
    procedure Log(Msg: string);
  public
    { Public declarations }
  end;

var
  frmServer: TfrmServer;

implementation

{$R *.dfm}

procedure TfrmServer.Log(Msg: string);
var
  s: string;
begin
  s:= FormatDateTime('yyyy-mm-dd hh:mm:ss ', Now());
  mmLog.Lines.Add(format('%s : %s',[s, Msg]));
end;

procedure TfrmServer.ServerSocketClientConnect(Sender: TObject;
  Socket: TCustomWinSocket);
begin
  Log(format('Connected    %s', [Socket.RemoteAddress]));
end;

procedure TfrmServer.ServerSocketClientRead(Sender: TObject;
  Socket: TCustomWinSocket);
var
  ReadData: Ansistring;
begin
  SetLength(ReadData, Socket.ReceiveLength);
  SetLength(ReadData, Socket.ReceiveBuf(Pointer(ReadData)^, length(ReadData)));

  Log('Read Data      ' + ReadData);
end;

end.
